// Import variables first
@use 'variables' as vars;

// Import Bootstrap
@use "~bootstrap/scss/bootstrap" as bs;

// Core styles
@use "fonts" as fonts;
@use "colors" as colors;
@use "background" as bg;
@use "mixins" as mix;
// Components
@use "./components/buttons";
@use "./components/navigation";
@use "./components/glass-panel";
@use "./components/diary";
@use "./components/spirit";
@use "./components/_spirit_chat";
@use "./components/_file-browser";
@use "./notifications";

// Glass panel hover effect
.glass-panel {
    .bg-cyber-g {
        background-image: linear-gradient(135deg, transparent, colors.$cyber) !important;
        background-size: 800% 100%;
        transition: background-size vars.$duration-quick vars.$ease-smooth;
    }

    .bg-cyber-g-light {
        background-image: linear-gradient(135deg, transparent, rgba(colors.$cyber, 0.5)) !important;
        background-size: 800% 100%;
        transition: background-size vars.$duration-quick vars.$ease-smooth;
    }
    
    &:hover {
        .bg-cyber-g {
            background-size: 150% 100%;
        }
        
        .bg-cyber-g-light {
            background-size: 350% 100%;
        }
    }
}

.bg-cyber {
    background-color: colors.$cyber !important;
    color: colors.$text-on-cyber !important;
    transition: all vars.$duration-quick vars.$ease-standard;
}

.bg-cyber-g {
    color: colors.$cyber !important;
    transition: all vars.$duration-quick vars.$ease-standard;
}

.text-cyber {
    color: colors.$cyber !important;
}

.glow-cyber, .cyber-glow {
    box-shadow: 0 0 2rem rgba(colors.$cyber, 0.2);
}

// Global styles
html {
    margin: 0;
    padding: 0;
    height: 100%;
    overflow: visible;
}

body {
    margin: 0;
    padding: 0;
    min-height: 100%;
    font-family: vars.$font-primary;
    font-size: vars.$base-font-size;
    font-weight: vars.$font-weight-regular !important;
    line-height: 1.5;
    color: colors.$body-color;
    background-color: colors.$body-bg;
    cursor: default;
    overflow-y: scroll;
    overflow-x: hidden;
    padding: 4rem 0 3rem 0; // Top padding for navbar, bottom for footer
    @include mix.cyber-scrollbar;
    position: relative;
}

* {
    transition: all vars.$duration-quick vars.$ease-standard !important;
}

// Footer styling
.footer {
    background: rgba(colors.$body-bg, 0.2);
    backdrop-filter: blur(vars.$glass-blur);
    -webkit-backdrop-filter: blur(vars.$glass-blur);
    
    small {
        opacity: 0.8;
        font-size: x-small;
        
        &:hover {
            opacity: 1;
        }
    }
}

.body-color {
    color: colors.$body-color !important;
}
.body-bg {
    background-color: colors.$body-bg !important;
}

h1, .h1 {
    font-size: (vars.$base-font-size * 1.6) !important;
}
h2, .h2 {
    font-size: (vars.$base-font-size * 1.4) !important;
}
h3, .h3 {
    font-size: (vars.$base-font-size * 1.2) !important;
}
h4, .h4 {
    font-size: (vars.$base-font-size * 1.1) !important;
}
h5, .h5 {
    font-size: (vars.$base-font-size * 1.05) !important;
}
h6, .h6 {
    font-size: (vars.$base-font-size * 1.02) !important;
}
h1, h2, h3, h4, h5, h6, .h1, .h2, .h3, .h4, .h5, .h6 {
    background: linear-gradient(135deg, colors.$cyber, bs.$success) !important;
    -webkit-background-clip: text !important;
    background-clip: text !important;
    -webkit-text-fill-color: transparent !important;
}

a {
    color: colors.$cyber;
    text-decoration: none;
    
    &:hover {
        // glow effect
        text-shadow: 0 0 (vars.$base-font-size * 0.6) rgba(colors.$cyber, 0.8);
        transition: all vars.$duration-quick vars.$ease-standard;
        cursor: pointer;        
    }
}

code {
    font-family: monospace;
    font-size: (vars.$base-font-size * 0.7);
    color: colors.$cyber;
    background-color: rgba(colors.$dark, 0.5);
    padding: vars.$spacing-unit/2;
    border-radius: vars.$border-radius;

    // cyber-scrollbar
    @include mix.cyber-scrollbar;
}

pre {
    @include mix.cyber-scrollbar;
}

small, .small {
    font-size: (vars.$base-font-size * 0.8);
    font-weight: vars.$font-weight-light;
}

strong, .strong {
    font-weight: vars.$font-weight-bold;
}

.text-muted {
    color: colors.$text-muted !important;
}

.clearfix, .clear-both {
    clear: both;
}

.cursor-pointer {
    cursor: pointer !important;
}

.modal-content {
    color: inherit !important;
}

// Interactive Element Mixin
@mixin interactive {
    cursor: pointer;
    transition: all vars.$duration-quick vars.$ease-standard;
    
    &:hover {
        transform: translateY(-1px);
        filter: brightness(1.2);
    }
    
    &:active {
        transform: translateY(1px);
    }
}


// Hero section
.hero {
    padding: vars.$spacing-unit * 4;
    text-align: center;
    
    h1 {
        font-size: vars.$base-font-size * 2.5 !important;
        margin-bottom: vars.$spacing-unit * 2;
    }
    
    p {
        font-size: vars.$base-font-size * 1.2;
        max-width: 80%;
        margin: 0 auto vars.$spacing-unit;
    }
}

// Features section
.features {
    padding: 4rem 0;
}

.feature-card {
    background-color: rgba(var(--bs-body-color-rgb), 0.2);
    border-radius: var(--bs-border-radius-sm);
    padding: 2rem;
    margin-bottom: 2rem;
    backdrop-filter: blur(5px);
    transition: transform vars.$duration-quick vars.$ease-standard;
    
    &:hover {
        transform: translateY(-5px);
    }
    
    .feature-icon {
        font-size: 2.5rem;
        margin-bottom: 1rem;
    }
    
    h3 {
        margin-bottom: 1rem;
    }
    
    p {
        color: rgba(255, 255, 255, 0.8);
    }
}

// Buttons
.btn-primary {
    background: linear-gradient(45deg, bs.$primary, colors.$primary-dark);
    border: none;
    padding: 0.8rem 2rem;
    font-weight: 500;
    transition: all vars.$duration-quick vars.$ease-standard;
    
    &:hover {
        transform: translateY(-2px);
        box-shadow: 0 4px 15px rgba(bs.$primary, 0.4);
    }
}

.btn-outline-light {
    border-width: 2px;
    padding: 0.8rem 2rem;
    font-weight: 500;
    transition: all vars.$duration-quick vars.$ease-standard;
    
    &:hover {
        transform: translateY(-2px);
        background: rgba(255, 255, 255, 0.1);
    }
}

// Form styles
.form-control, .form-select {
    background: rgba(255, 255, 255, 0.05);
    border: 1px solid rgba(255, 255, 255, 0.1);
    color: colors.$text-light;
    transition: all vars.$duration-quick vars.$ease-standard !important;
    
    &:focus {
        background: rgba(255, 255, 255, 0.1);
        border-color: rgba(255, 255, 255, 0.3);
        color: colors.$text-light;
        box-shadow: 0 0 0 0.2rem rgba(colors.$cyber, 0.25);
    }
}
.form-select option {
    color: colors.$dark;
}
textarea {
    @include mix.cyber-scrollbar;
}
.form-control::placeholder {
    color: colors.$text-muted !important;
}
.form-check-input:checked, input[type="checkbox"]:checked, input[type="radio"]:checked {
    background-color: invert(colors.$cyber) !important;
    border-color: invert(colors.$cyber) !important;
    box-shadow: none !important;
    transition: all vars.$duration-quick vars.$ease-standard !important;
}
.form-check-input:checked[type=checkbox], .form-check-input:checked[type=radio] {
    filter: invert(1);
    box-shadow: none !important;
}

.form-range-input {
    -webkit-appearance: none;
    appearance: none;
    background: transparent !important;
    border: none !important;
    outline: none !important;
    height: 6px;
    border-radius: 3px;
    transition: all vars.$duration-quick vars.$ease-standard !important;
    
    &::-webkit-slider-track {
        -webkit-appearance: none;
        background: rgba(colors.$cyber, 0.2) !important;
        height: 6px;
        border-radius: 3px;
        border: none !important;
        outline: none !important;
    }
    
    &::-webkit-slider-thumb {
        -webkit-appearance: none;
        appearance: none;
        background: colors.$cyber !important;
        height: 12px;
        width: 12px;
        border-radius: 50%;
        border: none !important;
        outline: none !important;
        cursor: pointer;
        transition: all vars.$duration-quick vars.$ease-standard !important;
        box-shadow: 0 0 8px rgba(colors.$cyber, 0.4);
        
        &:hover {
            background: lighten(colors.$cyber, 10%) !important;
            box-shadow: 0 0 12px rgba(colors.$cyber, 0.6);
            transform: scale(1.1);
        }
    }
    
    // Firefox styles
    &::-moz-range-track {
        background: rgba(colors.$cyber, 0.2) !important;
        height: 6px;
        border-radius: 3px;
        border: none !important;
        outline: none !important;
    }
    
    &::-moz-range-thumb {
        background: colors.$cyber !important;
        height: 12px;
        width: 12px;
        border-radius: 50%;
        border: none !important;
        outline: none !important;
        cursor: pointer;
        transition: all vars.$duration-quick vars.$ease-standard !important;
        box-shadow: 0 0 8px rgba(colors.$cyber, 0.4);
        
        &:hover {
            background: lighten(colors.$cyber, 10%) !important;
            box-shadow: 0 0 12px rgba(colors.$cyber, 0.6);
        }
    }
    
    &:focus {
        outline: none !important;
        
        &::-webkit-slider-thumb {
            box-shadow: 0 0 15px rgba(colors.$cyber, 0.8);
        }
    }
}

// Higher specificity override for Bootstrap's form-range
input[type="range"].form-range-input,
.form-range input[type="range"] {
    -webkit-appearance: none !important;
    appearance: none !important;
    background: rgba(colors.$cyber, 0.2) !important;
    border: none !important;
    outline: none !important;
    height: 6px !important;
    border-radius: 3px !important;
    
    &::-webkit-slider-track {
        -webkit-appearance: none !important;
        background: rgba(colors.$cyber, 0.2) !important;
        height: 6px !important;
        border-radius: 3px !important;
        border: none !important;
        outline: none !important;
    }
    
    &::-webkit-slider-thumb {
        -webkit-appearance: none !important;
        appearance: none !important;
        background: colors.$cyber !important;
        height: 12px !important;
        width: 12px !important;
        border-radius: 50% !important;
        border: none !important;
        outline: none !important;
        cursor: pointer !important;
        box-shadow: 0 0 8px rgba(colors.$cyber, 0.4) !important;
        
        &:hover {
            background: lighten(colors.$cyber, 10%) !important;
            box-shadow: 0 0 12px rgba(colors.$cyber, 0.6) !important;
        }
    }
    
    &::-moz-range-track {
        background: rgba(colors.$cyber, 0.2) !important;
        height: 6px !important;
        border-radius: 3px !important;
        border: none !important;
        outline: none !important;
    }
    
    &::-moz-range-thumb {
        background: colors.$cyber !important;
        height: 12px !important;
        width: 12px !important;
        border-radius: 50% !important;
        border: none !important;
        outline: none !important;
        cursor: pointer !important;
        box-shadow: 0 0 8px rgba(colors.$cyber, 0.4) !important;
        
        &:hover {
            background: lighten(colors.$cyber, 10%) !important;
            box-shadow: 0 0 12px rgba(colors.$cyber, 0.6) !important;
        }
    }
    
    &:focus {
        box-shadow: none !important;
        outline: none !important;
    }
}

// Chat settings collapse fix
#chatSettings.collapse:not(.show) {
    display: none !important;
}

#chatSettings.collapse.show {
    display: flex !important;
}

// Animations
@keyframes fadeIn {
    from { opacity: 0; transform: translateY(20px); }
    to { opacity: 1; transform: translateY(0); }
}

.fade-in {
    animation: fadeIn vars.$duration-emphasis vars.$ease-smooth forwards;
}

#page-loading-indicator {
    z-index: 100000 !important;
    .loading-ghost {
        animation: loading-ghost 2s vars.$ease-smooth infinite;
        font-size: 3rem !important;
    }
}

@keyframes loading-ghost {
    0% { opacity: 0; transform: translateX(0rem); }
    50% { opacity: 0.75; transform: translateX(-1rem); }
    100% { opacity: 0; transform: translateX(0rem); }
}



.btn-check:checked+.btn:focus-visible, .btn.active:focus-visible, .btn.show:focus-visible, .btn:first-child:active:focus-visible, :not(.btn-check)+.btn:active:focus-visible
{
    box-shadow: none;
}

// from _navigation.scss, we need this here too, but will refactor in future
.nav-link {
    color: colors.$text-light;
    position: relative;
    padding: 0.5rem 1rem;
    background: transparent;
    
    &::after {
        content: '';
        position: absolute;
        bottom: 0;
        left: 1rem;
        right: 1rem;
        height: 2px;
        background: colors.$cyber;
        transform: scaleX(0);
        transition: transform vars.$duration-smooth vars.$ease-smooth;
    }
    
    // Desktop hover
    @media (hover: hover) {
        &:hover {
            color: colors.$cyber;
            background: transparent;
            
            &::after {
                transform: scaleX(1);
            }
        }
    }
    
    // Active state (both desktop and mobile)
    &.active,
    &[aria-expanded="true"] {
        color: colors.$cyber;
        background: transparent;
        
        &::after {
            transform: scaleX(1);
        }
    }
    
    // Reset color when dropdown is closed
    &[aria-expanded="false"] {
        color: colors.$text-light;
        
        &::after {
            transform: scaleX(0);
        }
    }
}
.dropdown-menu {
    background: rgba(colors.$dark, 1);
    border: none;
    box-shadow: 0 0 2rem rgba(colors.$cyber, 0.2);
    z-index: 1000;
    
    .dropdown-item {
        color: colors.$text-light;
        &:hover, &.active {
            background: transparent;
            color: colors.$cyber !important;
        }
    }
    
    .dropdown-divider {
        border-color: rgba(colors.$cyber, 0.2);
    }
}

.page-link {
    border-color: rgba(colors.$cyber, 0.2);
    background-color: transparent;
    color: colors.$cyber !important;

    &:hover {
        background-color: rgba(colors.$cyber, 0.1);
    }
}

.active>.page-link, .page-link.active {
    background-color: colors.$cyber !important;
    color: colors.$body-bg !important;
    border-color: colors.$cyber !important;
}

.log-content {
    @include mix.cyber-scrollbar;
}

.card-body {
    color: colors.$body-color;
    @include mix.cyber-scrollbar;
}

#cqChatMessages {
    @include mix.cyber-scrollbar;
}
