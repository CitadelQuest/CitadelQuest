{% extends 'base.html.twig' %}

{% block title %}{{ entry.title }}{% endblock %}

{% block body %}
<div class="container mt-4">
    <div class="row justify-content-center">
        <div class="col-md-8">
            <div class="card glass-panel p-2">
                <div class="card-body body-color">
                    <div class="d-flex justify-content-between align-items-start mb-3">
                        <h1 class="card-title h2">{{ entry.title }}</h1>
                        <div>
                            <button id="toggleFavorite" class="btn btn-link p-0 me-2" title="Toggle favorite">
                                <i class="mdi mdi-star {% if entry.isFavorite %}text-warning{% else %}text-muted{% endif %}"></i>
                            </button>
                            <div class="dropdown d-inline">
                                <button class="btn btn-link p-0" type="button" data-bs-toggle="dropdown">
                                    <i class="mdi mdi-dots-vertical"></i>
                                </button>
                                <ul class="dropdown-menu dropdown-menu-end">
                                    <li><a class="dropdown-item" href="{{ path('diary_edit', {id: entry.id}) }}">Edit</a></li>
                                    <li><hr class="dropdown-divider"></li>
                                    <li><a class="dropdown-item text-danger" href="#" id="deleteEntry">Delete</a></li>
                                </ul>
                            </div>
                        </div>
                    </div>
                     
                    <div class="text-muted mb-3">
                        {{ entry.createdAt|date('F j, Y g:i a') }}
                        {% if entry.mood %}
                            • {{ entry.mood }}
                        {% endif %}
                        {% if entry.isEncrypted %}
                            • <i class="mdi mdi-lock" title="Encrypted"></i>
                        {% endif %}
                    </div>

                    <div class="card-text mb-4">
                        {{ entry.contentFormatted|default(entry.content|nl2br)|raw }}
                    </div>

                    {% if entry.tags %}
                        <div class="mt-3">
                            {% for tag in entry.tags %}
                                <span class="badge bg-secondary me-1">{{ tag }}</span>
                            {% endfor %}
                        </div>
                    {% endif %}

                    <div class="mt-4">
                        <a href="{{ path('diary_index') }}" class="btn btn-sm btn-secondary">
                            <i class="mdi mdi-arrow-left"></i> Back to Diary
                        </a>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>
{% endblock %}

{% block javascripts %}
{{ parent() }}
<script>
document.addEventListener('DOMContentLoaded', function() {
    const entryId = '{{ entry.id }}';
    
    // Toggle favorite
    document.getElementById('toggleFavorite').addEventListener('click', async function() {
        try {
            const response = await fetch('{{ path('app_api_diary_toggle_favorite', {id: entry.id}) }}', {
                method: 'POST'
            });
            
            if (response.ok) {
                const data = await response.json();
                const starIcon = this.querySelector('i');
                if (data.isFavorite) {
                    starIcon.classList.remove('text-muted');
                    starIcon.classList.add('text-warning');
                } else {
                    starIcon.classList.remove('text-warning');
                    starIcon.classList.add('text-muted');
                }
            }
        } catch (error) {
            console.error('Error:', error);
        }
    });

    // Delete entry
    document.getElementById('deleteEntry').addEventListener('click', async function(e) {
        e.preventDefault();
        
        if (!confirm('Are you sure you want to delete this entry?')) {
            return;
        }
        
        try {
            const response = await fetch('{{ path('app_api_diary_delete', {id: entry.id}) }}', {
                method: 'DELETE'
            });
            
            if (response.ok) {
                window.location.href = '{{ path('diary_index') }}';
            }
        } catch (error) {
            console.error('Error:', error);
            alert('Failed to delete entry');
        }
    });
});
</script>
{% endblock %}
